import 'package:flutter/material.dart';

void main() {
  runApp(myApp());
}

// StatelessWidget não muda estado
// StatefulWidget muda o estado
class myApp extends StatefulWidget {
  @override
  _myAppState createState() => _myAppState();
}

class _myAppState extends State<myApp> {
  final List<Map<String, dynamic>> perguntas = [
    {
      //1
      'pergunta': 'Qual o primeiro time campeão mundial de free fire?',
      'opcoes': ['GPS', 'WAG', 'EVOS', 'TEREM'],
      'respostaCorreta': 'EVOS',
    }, //2
    {
      'pergunta':
          'Qual o primeiro time brasileiro campeão mundial de free fire?',
      'opcoes': ['FLUXO', 'LOUD', 'CORINTHIANS', 'PAIN'],
      'respostaCorreta': 'CORINTHIANS',
    }, //3
    {
      'pergunta':
          'Qual o primeiro jogador brasileiro a bater a marca de 1000 abates?',
      'opcoes': ['CAUAN7', 'NOBRU', 'MTS007', 'UBITA'],
      'respostaCorreta': 'CAUAN7',
    },
    {
      //4
      'pergunta': 'Quem foi o jogador MVP do Corithians no Mundial de 2019?',
      'opcoes': ['OPIRES', 'NOBRU', 'LEVEL UP', 'FIXA'],
      'respostaCorreta': 'NOBRU',
    },
    {
      //5
      'pergunta': 'Qual time foi criado pelo youtuber BRUNO PLAYHARD',
      'opcoes': ['FLUXO', 'PAIN', 'AMAZON CRIPZ', 'LOUD'],
      'respostaCorreta': 'LOUD',
    },
    {
      //6
      'pergunta': 'Qual jogador tinha o apelido de REI DO LANÇA?',
      'opcoes': ['EL GATO', 'CRUSHER FOX', 'PIUZINHO', 'CHIN INSIDER'],
      'respostaCorreta': 'EL GATO',
    },
    {
      //7
      'pergunta': 'Qual o primeiro personagem ativo?',
      'opcoes': ['ALOK', 'KAMIR', 'A124', 'TATSUYA'],
      'respostaCorreta': 'ALOK',
    },
    {
      //8
      'pergunta': 'Em qual mês foi lançado o FREE FIRE?',
      'opcoes': ['DEZEMBRO', 'MARÇO', 'AGOSTO', 'FEVEREIRO'],
      'respostaCorreta': 'DEZEMBRO',
    },
    {
      //9
      'pergunta': 'Qual o primeiro passe do FREE FIRE?',
      'opcoes': ['HIP HOP', 'SAKURA', 'STEAMPUNK', 'DESORDEM'],
      'respostaCorreta': 'SAKURA',
    },
    {
      //10
      'pergunta': 'Qual o time emulador mais vitorioso da história?',
      'opcoes': ['NOISE 2020', 'FAZOP 2022', 'LOS 2021', 'FLAMENGO 2023'],
      'respostaCorreta': 'FAZOP 2022',
    },
  ];
  //inicializa os valores do quiz
  int perguntaAtual = 0;
  int pontos = 0;
  String? mensagem;
  bool quizFinalizado = false;

  String getImagemResultado() {
    if (pontos == 10) {
      return 'mestre';
    } else if (pontos >= 8) {
      return 'diamante';
    } else if (pontos >= 6) {
      return 'platina';
    } else if (pontos >= 4) {
      return 'ouro';
    } else if (pontos >= 2) {
      return 'prata';
    } else {
      return'bronze';
    }
  }

  //função que verifica a resposta
  void verificarResposta(String respostaEscolhida) {
    String respostaCorreta = perguntas[perguntaAtual]['respostaCorreta'];

    setState(() {
      if (respostaEscolhida == respostaCorreta) {
        pontos++;
        mensagem = 'Acertou mais um paizão!';
      } else {
        mensagem = 'Errou niuba!';
      }
    });
    //espera 2 segundos e passa para a próxima pergunta

    Future.delayed(Duration(seconds: 0), () {
      setState(() {
        mensagem = null;
        if (perguntaAtual < perguntas.length - 1) {
          perguntaAtual++;
        } else {
          quizFinalizado = true;
        }
      });
    });
  } //fim do método anteior

  // método para reiniciar o quiz
  void reiniciarQuiz() {
    setState(() {
      perguntaAtual = 0;
      pontos = 0;
      quizFinalizado = false;
      mensagem = null;
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData.dark(),
       home: Container(
    decoration: BoxDecoration(
      image: DecorationImage(
        image: AssetImage('https://acdn-us.mitiendanube.com/stores/002/767/708/products/whatsapp-image-2023-07-11-at-14-36-481-2a82bbdef5451da5f616891059280721-640-0.png'), // sua imagem
        fit: BoxFit.cover, // cobre toda a tela
      ),
    ),
      child: Scaffold(
        appBar: AppBar(title: Text('QUIZ SOBRE FREE FIRE'),backgroundColor: Colors.orange,centerTitle: true),
        body: Center(
          child:
              quizFinalizado
                  ? Column(
                    mainAxisAlignment:
                        MainAxisAlignment.center, //alinhamento da vertical
                    children: [
                      Image.network(
                        '',
                      ),
                      Text(
                        'Parabéns você terminou o quiz!',
                        textAlign: TextAlign.center,
                        style: TextStyle(fontSize: 24),
                      ),
                      SizedBox(height: 20),

                      Text(
                        'Você acertou $pontos de ${perguntas.length} perguntas!',
                        style: TextStyle(fontSize: 30),
                      ),
                      SizedBox(height: 20),
                      Image.network(getImagemResultado()),
                      SizedBox(height: 20),
                      ElevatedButton(
                        onPressed: reiniciarQuiz,
                        child: Text('Recomeçar'),
                      ),
                    ],
                  )
                  : Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Image.network(
                        'https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Flag_of_Brazil.svg/1024px-Flag_of_Brazil.svg.png',
                        width: 200,
                        height: 200,
                      ),
                      SizedBox(height: 20),
                      Text(
                        perguntas[perguntaAtual]['pergunta'],
                        textAlign: TextAlign.center,
                      ),
                      SizedBox(height: 20),
                      ...perguntas[perguntaAtual]['opcoes'].map<Widget>((
                        opcao,
                      ) {
                        return Padding(
                          padding: const EdgeInsets.symmetric(
                            vertical: 6.0,
                            horizontal: 16.0,
                          ),
                          child: SizedBox(
                            width: 250, // ocupa toda a largura
                            height: 50, // altura fixa para todos os botões
                            child: ElevatedButton(
                              onPressed:
                                  mensagem == null
                                      ? () => verificarResposta(opcao)
                                      : null,
                              child: Text(opcao,
                              style: 
                              TextStyle(color: Colors.blueGrey)
                              
                              ),
                            ),
                          ),
                        );
                      }).toList(),
                      SizedBox(height: 20),
                      if (mensagem != null) Text(mensagem!),
                      SizedBox(height: 20),
                      Text('Pontuação: $pontos'),
                    ],
                  ),
        ),
      ),
    ));
  }
}
